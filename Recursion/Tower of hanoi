Tower of Hanoi is a mathematical puzzle where we have three rods and n disks. The objective of the puzzle is to move all disks from source rod to destination rod using third rod (say auxiliary). The rules are :
1) Only one disk can be moved at a time.
2) A disk can be moved only if it is on the top of a rod.
3) No disk can be placed on the top of a smaller disk.
Print the steps required to move n disks from source rod to destination rod.
Source Rod is named as 'a', auxiliary rod as 'b' and destination rod as 'c'.

Sample Input 1 :
2
Sample Output 1 :
a b
a c
b c
Sample Input 2 :
3
Sample Output 2 :
a c
a b
c b
a c
b a
b c
a c











public static void towerOfHanoi(int disks, char source, char auxiliary, char destination) {
		// Write your code here
//Base Case
        if (disks==1)
        {
            System.out.println(source+" "+destination);
        }
        else if (disks==0)
        {
            System.out.println("");
        }
        else
        {
            //Move (n-1) disks from source (s) to helper (h) through destination (d)
            towerOfHanoi(disks-1,source,destination,auxiliary);
            
            //Move the nth (largest) disk from source (s) to destination (d)
            System.out.println(source+" "+destination);
            
            //Move the (n-1) disks from helper (h) to destination (d) through source (s)
        	towerOfHanoi(disks-1,auxiliary,source,destination);
        }
	}

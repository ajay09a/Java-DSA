package priorityqueue;
import java.util.ArrayList;

public class Priority_queue<T> {
	private ArrayList<Element<T>> heap;

	public Priority_queue() {
		heap = new ArrayList<>();
	}

	public void insert(T value, int priority) {
		Element<T> e = new Element<>(value, priority);
		heap.add(e);
		int child = heap.size()-1;
		int parent = (child-1)/2;

		while(child>0) {
			if(heap.get(parent).priority> heap.get(child).priority) {
				Element<T> temp = heap.get(child);
				heap.set(child, heap.get(parent));
				heap.set(parent, temp);
				child = parent;
				parent = (child-1)/2;

			}
			else {
				return;
			}
		}

	}

	public T removeMin() throws priorityQueueException {
		if(isEmpty()) {
			throw new priorityQueueException();
		}
		Element<T> removed= heap.get(0);
		T ans = removed.value;

		heap.set(0, heap.get(heap.size()-1));
		heap.remove(heap.size()-1);

		int parentIndex=0;
		int leftChildIndex= 2*parentIndex+1;
		int rightChildIndex= 2*parentIndex +2;

		while(leftChildIndex < heap.size()){
			int minIndex= parentIndex;
			if(heap.get(leftChildIndex).priority < heap.get(minIndex).priority){
				minIndex= leftChildIndex;
			}
			if(rightChildIndex < heap.size() && heap.get(rightChildIndex).priority < heap.get(minIndex).priority){
				minIndex= rightChildIndex;
			}
			if(minIndex == parentIndex){
				break;
			}
			Element<T> temp= heap.get(minIndex);
			heap.set(minIndex, heap.get(parentIndex));
			heap.set(parentIndex, temp);
			parentIndex= minIndex;
			leftChildIndex= 2*parentIndex+1;
			rightChildIndex= 2*parentIndex +2;
		}
		return ans;
	}

	public T getMin() throws priorityQueueException {
		if(isEmpty()) {
			throw new priorityQueueException();
		}
		return heap.get(0).value;
	}

	public int size() {
		return heap.size();
	}

	public boolean isEmpty() {
		if(size()==0) {
			return true;
		}
		return false;
	}

}











***********************************************
***********************************************








package priorityqueue;

public class Element<T> {
	T value;
	int priority;
	
	public Element(T value, int priority) {
		this.value = value;
		this.priority = priority;
	}

}









***************************************************
***************************************************







package priorityqueue;

public class PriorityQueueTest{

    public static void main(String[] args) throws PriorityQueueException{

        Priority_queue<String> pq= new Priority_queue<String>();
        pq.insert("abc", 15);
        pq.insert("def", 13);
        pq.insert("fsas", 90);
        pq.insert("fsafsafa", 150);
        pq.insert("xvxzxvssa", 120);

        while(!pq.isEmpty()){
            System.out.println(pq.getMin());
            pq.removeMin();
        }

    }
}

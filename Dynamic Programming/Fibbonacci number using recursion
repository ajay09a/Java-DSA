package dp;
import java.util.*;
public class DynamicFibbonacci {
	
	public static int fibb(int n, int[] arr) {
		if(n==0 || n==1)
			return n;
		int ans1, ans2;
		if(arr[n-1]==-1) {
			ans1 = fibb(n-1, arr);
			arr[n-1] = ans1;
		}
		else {
			ans1 = arr[n-1];
		}
		if(arr[n-2]==-1) {
			ans2 = fibb(n-2, arr);
			arr[n-2] = ans2;
		}
		else {
			ans2 = arr[n-2];
		}
		return ans1+ans2;
	}

	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		int n = s.nextInt();
		// we are using an array to store the subproblem solution for future use
		int[] arr = new int[n+1];
		for (int i=0; i<arr.length; i++){
			arr[i] = -1;
		}
		int ans = fibb(n,arr);
		System.out.println(ans);
	}

}

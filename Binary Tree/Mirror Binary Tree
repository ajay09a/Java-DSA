For a given Binary Tree of type integer, update it with its corresponding mirror image.

Sample Input 1:
1 2 3 4 5 6 7 -1 -1 -1 -1 -1 -1 -1 -1
Sample Output 1:
1 
3 2 
7 6 5 4
Sample Input 2:
5 10 6 2 3 -1 -1 -1 -1 -1 9 -1 -1
Sample Output 2:
5 
6 10 
3 2 
9


*********************************
*********************************



public static void mirrorBinaryTree(BinaryTreeNode<Integer> root){
		//Your code goes here
        mirrorTree(root);
	}
    public static BinaryTreeNode<Integer> mirrorTree(BinaryTreeNode<Integer> root){
        if(root == null)
            return null;
        BinaryTreeNode<Integer> temp = root.left;
        root.left = root.right;
        root.right = temp;
        mirrorTree(root.left);
        mirrorTree(root.right);
        return root;
    }
